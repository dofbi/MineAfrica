Minecruft Model: 

Client to Server: 

1. Tor Connection Module
	a. Redirect Tor Traffic to a dead port 
	b. Sniff Tor Traffic on that port. 
2. Encode Traffic and Redirect
	a. Obtain Tor Access Node Address
	b. Encode With AES-ECB - Maybe do OBS4 next
	c. Then change into Minecraft Character Moves. - First Send Raw encryption then increase sophistication
	d. Forward to Tor Node Minecraft Server - Perhaps do not run a server - But somehow make login look real - note Dead Parrot Attacks
3. Decode Traffic after redirection
	a. Place Fake server on Minecraft port.
	b. Forward Traffic to real server. - First Ignore actual Server Responses - Or pick responses that will maintain appearance of game session. 
	c. Parse Each Payload and reassemble
	d. Decypt AES and/or other transformations

4. Forward to actual requested address.
	a. Recreate TCP Streams into their respective parts. 
	b. Fully reassemble payload on each side. 

- Can be tested with a simple wget or curl - have requests redirected - Determine how to turn off all ports - how to redirect

Server to Client: 

1. Recieve Tor Responses 
2. Encode and Redirect: 
	a. Encode with AES-ECB or OBS4
	b. Then Minecraft Server Responses - What responses? 
3. Match requested addresses with sent address and forward to client
	a. Client Addresses stored by request basis - Forward there
	b. Use FIFO Queuing to hold packets in order
4. Decode 
5. Send to Browser application
